{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { ModalButton, ModalContainer, ModalView, StyledInput, ModalAction, ModalActionGroup, ModalIcon, HeaderTitle, colors } from \"../styles/appStyles\";\nimport { AntDesign } from \"@expo/vector-icons\";\n\nvar InputModal = function InputModal(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible,\n      todoInputValue = _ref.todoInputValue,\n      setTodoInputValue = _ref.setTodoInputValue,\n      handleAddTodo = _ref.handleAddTodo,\n      todoToBeEdited = _ref.todoToBeEdited,\n      setTodoToBeEdited = _ref.setTodoToBeEdited,\n      handleEditTodo = _ref.handleEditTodo,\n      todos = _ref.todos;\n\n  var handleCloseModal = function handleCloseModal() {\n    setModalVisible(false);\n    setTodoInputValue(\"\");\n    setTodoToBeEdited(null);\n  };\n\n  function handleSubmit() {\n    if (!todoToBeEdited) {\n      var newTodo = {\n        title: todoInputValue,\n        date: new Date().toUTCString(),\n        key: \"\" + (todos[todos.length - 1] && parseInt(todos[todos.length - 1].key + 1) || 1)\n      };\n      handleAddTodo(newTodo);\n    } else {\n      handleEditTodo({\n        title: todoInputValue,\n        date: todoToBeEdited.date,\n        key: todoToBeEdited.key\n      });\n    }\n\n    setTodoInputValue(\"\");\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ModalButton, {\n    onPress: function onPress() {\n      setModalVisible(true);\n    }\n  }, React.createElement(AntDesign, {\n    name: \"plus\",\n    size: 30,\n    color: colors.secondary\n  })), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: handleCloseModal\n  }, React.createElement(ModalContainer, null, React.createElement(ModalView, null, React.createElement(ModalIcon, null, React.createElement(HeaderTitle, null, \"Add Todo\"), React.createElement(AntDesign, {\n    name: \"edit\",\n    size: 30,\n    color: colors.tertiary\n  })), React.createElement(StyledInput, {\n    placeholder: \"Add a Todo\",\n    placeholderTextColor: colors.alternative,\n    selectionColor: colors.secondary,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setTodoInputValue(text);\n    },\n    value: todoInputValue,\n    onSubmitEditing: handleSubmit\n  }), React.createElement(ModalActionGroup, null, React.createElement(ModalAction, {\n    color: colors.primary,\n    onPress: handleCloseModal\n  }, React.createElement(AntDesign, {\n    name: \"close\",\n    size: 28,\n    color: colors.tertiary\n  })), React.createElement(ModalAction, {\n    color: colors.tertiary,\n    onPress: handleSubmit\n  }, React.createElement(AntDesign, {\n    name: \"check\",\n    size: 28,\n    color: colors.secondary\n  })))))));\n};\n\nexport default InputModal;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Vanzyle/OneDrive - EY/Desktop/Projects/ToDoApp/frontend/components/InputModal.js"],"names":["React","ModalButton","ModalContainer","ModalView","StyledInput","ModalAction","ModalActionGroup","ModalIcon","HeaderTitle","colors","AntDesign","InputModal","modalVisible","setModalVisible","todoInputValue","setTodoInputValue","handleAddTodo","todoToBeEdited","setTodoToBeEdited","handleEditTodo","todos","handleCloseModal","handleSubmit","newTodo","title","date","Date","toUTCString","key","length","parseInt","secondary","tertiary","alternative","text","primary","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Modal } from \"react-native\";\r\nimport {\r\n  ModalButton,\r\n  ModalContainer,\r\n  ModalView,\r\n  StyledInput,\r\n  ModalAction,\r\n  ModalActionGroup,\r\n  ModalIcon,\r\n  HeaderTitle,\r\n  colors,\r\n} from \"../styles/appStyles\";\r\n\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\n\r\nconst InputModal = ({\r\n  modalVisible,\r\n  setModalVisible,\r\n  todoInputValue,\r\n  setTodoInputValue,\r\n  handleAddTodo,\r\n  todoToBeEdited,\r\n  setTodoToBeEdited,\r\n  handleEditTodo,\r\n  todos,\r\n}) => {\r\n  const handleCloseModal = () => {\r\n    setModalVisible(false);\r\n    setTodoInputValue(\"\");\r\n    setTodoToBeEdited(null);\r\n  };\r\n\r\n  function handleSubmit() {\r\n    if (!todoToBeEdited) {\r\n      const newTodo = {\r\n        title: todoInputValue,\r\n        date: new Date().toUTCString(),\r\n        key: `${\r\n          (todos[todos.length - 1] &&\r\n            parseInt(todos[todos.length - 1].key + 1)) ||\r\n          1\r\n        }`,\r\n      };\r\n      handleAddTodo(newTodo);\r\n    } else {\r\n      handleEditTodo({\r\n        title: todoInputValue,\r\n        date: todoToBeEdited.date,\r\n        key: todoToBeEdited.key,\r\n      });\r\n    }\r\n    setTodoInputValue(\"\");\r\n  }\r\n  return (\r\n    <>\r\n      <ModalButton\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <AntDesign name=\"plus\" size={30} color={colors.secondary} />\r\n      </ModalButton>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={handleCloseModal}\r\n      >\r\n        <ModalContainer>\r\n          <ModalView>\r\n            <ModalIcon>\r\n              <HeaderTitle>Add Todo</HeaderTitle>\r\n              <AntDesign name=\"edit\" size={30} color={colors.tertiary} />\r\n            </ModalIcon>\r\n            <StyledInput\r\n              placeholder=\"Add a Todo\"\r\n              placeholderTextColor={colors.alternative}\r\n              selectionColor={colors.secondary}\r\n              autoFocus={true}\r\n              onChangeText={(text) => setTodoInputValue(text)}\r\n              value={todoInputValue}\r\n              onSubmitEditing={handleSubmit}\r\n            />\r\n            <ModalActionGroup>\r\n              <ModalAction color={colors.primary} onPress={handleCloseModal}>\r\n                <AntDesign name=\"close\" size={28} color={colors.tertiary} />\r\n              </ModalAction>\r\n              <ModalAction color={colors.tertiary} onPress={handleSubmit}>\r\n                <AntDesign name=\"check\" size={28} color={colors.secondary} />\r\n              </ModalAction>\r\n            </ModalActionGroup>\r\n          </ModalView>\r\n        </ModalContainer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputModal;\r\n\r\nconst styles = StyleSheet.create({});\r\n"]},"metadata":{},"sourceType":"module"}